-- | Version @{{ service.version }}@ of the {{ service.name }} service.
data {{ service.abbrev }}

instance AWSService {{ service.abbrev }} where
    type Sg {{ service.abbrev }} = {{ service.signature }}
    type Er {{ service.abbrev }} = {{ service.error }}

    service = service'
      where
        service' :: Service {{ service.abbrev }}
        service' = Service
            { _svcAbbrev       = "{{ service.abbrev }}"
            , _svcPrefix       = "{{ service.endpointPrefix }}"
            , _svcVersion      = "{{ service.version }}"
            , _svcTargetPrefix = {% if service.targetPrefix %}Just "{{ service.targetPrefix }}"{% else %}Nothing{% endif %}
            , _svcJSONVersion  = {% if service.jsonVersion %}Just "{{ service.jsonVersion }}"{% else %}Nothing{% endif %}
            , _svcHandle       = handle
            , _svcRetry        = retry
            }

        handle :: Status
               -> Maybe (LazyByteString -> ServiceError {{ service.error }})
        handle = {% if service.error == "JSONError" %}jsonError{% else %}restError{% endif %} statusSuccess service'

        retry :: Retry {{ service.abbrev }}
        retry = Exponential
            { _retryBase     = {{ service.retryDelay.base }}
            , _retryGrowth   = {{ service.retryDelay.growth }}
            , _retryAttempts = {{ service.retryDelay.attempts }}
            , _retryCheck    = check
            }

        check :: Status
              -> {{ service.error }}
              -> Bool
        check (statusCode -> s) (awsErrorCode -> e)
        {% for policy in service.retryPolicies %}
          {% if policy.value.error | defined %}
            | s == {{ policy.value.code }} && "{{ policy.value.error }}" == e = True -- {{ policy.key | toTitle }}
          {% endif %}
        {% endfor %}
        {% for policy in service.retryPolicies %}
          {% if !(policy.value.error | defined) %}
            | s == {{ policy.value.code }}  = True -- {{ policy.key | toTitle }}
          {% endif %}
        {% endfor %}
            | otherwise = False
{% if service.xmlNamespace %}

ns :: Text
ns = "{{ service.xmlNamespace }}"
{-# INLINE ns #-}
{% endif %}
